# 游꿢 AI-l칛sbart systemregister f칬r Actor Showcase

main:
  syfte: "FastAPI-applikation som exponerar REST API f칬r sk친despelardata"
  input: "HTTP requests till /actors och /actors/{id} endpoints"
  output: "JSON responses med sk친despelardata och API dokumentation"
  trigger: "make api - startar uvicorn server"
  anrop: "http://localhost:8000/actors f칬r att h칛mta alla sk친despelare"

services/actors:
  syfte: "Business logic f칬r att hantera sk친despelardata och returnera strukturerad information"
  input: "Funktionsanrop fr친n API endpoints"
  output: "Lista av Actor-objekt eller enskild Actor"
  beroenden: "models/actor f칬r datastruktur"
  anrop: "get_actors() returnerar alla sk친despelare, get_actor_by_id(id) returnerar specifik"

models/actor:
  syfte: "Pydantic-modell som definierar datastruktur f칬r sk친despelare"
  input: "Dictionary med sk친despelardata (id, name, birth_year, country, oscars)"
  output: "Validerat Actor-objekt med typning"
  format: "Pydantic BaseModel med int, str f칛lt"
  test: "Automatisk validering vid skapande av Actor-objekt"

ui/src/App:
  syfte: "React-komponent som visar sk친despelare i grid-layout med loading states"
  input: "API responses fr친n backend /actors endpoint"
  output: "Rendering av ActorCard-komponenter med felhantering"
  beroenden: "ActorCard-komponent, shadcn/ui Button"
  trigger: "npm run dev i ui-mappen"

ui/src/components/ActorCard:
  syfte: "Visar enskild sk친despelare med namn, land, f칬delse친r och Oscar-staty"
  input: "Actor-objekt med id, name, birth_year, country, oscars"
  output: "Card-komponent med formaterad sk친despelarinformation"
  beroenden: "shadcn/ui Card, Badge komponenter"
  format: "TypeScript interface Actor med alla f칛lt"

Makefile:
  syfte: "Orchestrerar projektets kommandon f칬r setup, k칬rning och dokumentation"
  input: "make-kommandon (help, api, ui, setup, test, docs)"
  output: "Feedback med emojis och startar relevanta processer"
  trigger: "make help visar alla tillg칛ngliga kommandon"
  anrop: "make api startar backend, make ui startar frontend"

setup.sh:
  syfte: "Automatiserar installation av dependencies och skapar frontend-struktur"
  input: "K칬rning i WSL-milj칬 fr친n projektets rot"
  output: "Installerad backend och frontend med alla dependencies"
  trigger: "bash setup.sh fr친n projektets rotmapp"
  test: "Kontrollerar att main.py finns och att npm/uv 칛r tillg칛ngliga" 