# 游꿢 AI-l칛sbart systemregister f칬r Actor Showcase

main:
  syfte: "FastAPI-applikation som hanterar all logik och returnerar strukturerad data f칬r UI"
  input: "HTTP requests till /actors, /stats, /actors/country/{country} endpoints"
  output: "Strukturerade JSON responses med success/error states och formaterad data"
  trigger: "make api - startar uvicorn server"
  anrop: "http://localhost:8000/actors f칬r att h칛mta alla sk친despelare med metadata"

services/actors:
  syfte: "Business logic f칬r sk친despelardata - validering, filtrering, statistik och dataformatering"
  input: "Funktionsanrop fr친n API endpoints med parametrar"
  output: "Validerade Actor-objekt, filtrerade listor, statistik och strukturerad data"
  beroenden: "models/actor f칬r datastruktur"
  anrop: "get_actors(), get_actor_by_id(id), get_actors_by_country(country), get_oscar_winners(), get_actor_stats()"

models/actor:
  syfte: "Pydantic-modell som definierar datastruktur f칬r sk친despelare - typmaster f칬r hela systemet"
  input: "Dictionary med sk친despelardata (id, name, birth_year, country, oscars)"
  output: "Validerat Actor-objekt med typning och OpenAPI-metadata"
  format: "Pydantic BaseModel med Field-validators och OpenAPI-schema"
  test: "Automatisk validering vid skapande av Actor-objekt"
  trigger: "make types - genererar TypeScript fr친n OpenAPI"

ui/src/App:
  syfte: "Pure presentation - visar sk친despelare fr친n API utan business logic"
  input: "Strukturerad data fr친n backend API responses"
  output: "Rendering av ActorCard-komponenter med loading/error states"
  beroenden: "ActorCard-komponent, useActors hook f칬r data fetching"
  trigger: "npm run dev i ui-mappen"

ui/src/hooks/useActors:
  syfte: "Pure data fetching - h칛mtar data fr친n API utan logik"
  input: "API endpoint calls till backend"
  output: "Raw data f칬r UI-komponenter"
  beroenden: "lib/api f칬r fetch-anrop, genererade types fr친n OpenAPI"
  format: "React hook som returnerar actors, loading, error states"

ui/src/lib/api:
  syfte: "Pure data fetching layer - ingen business logic"
  input: "API endpoint URLs"
  output: "Raw JSON responses fr친n backend"
  format: "Simple fetch wrapper utan transformation"

ui/src/components/ActorCard:
  syfte: "Pure presentation component - visar sk친despelardata som den kommer fr친n API"
  input: "Actor-objekt fr친n backend (genererade types fr친n OpenAPI)"
  output: "Formaterad card-komponent med sk친despelarinformation"
  beroenden: "shadcn/ui Card, Badge komponenter"
  format: "TypeScript types genererade fr친n Pydantic via OpenAPI"

ui/src/types/api:
  syfte: "Genererade TypeScript types fr친n OpenAPI - synkroniserade med Pydantic"
  input: "OpenAPI schema fr친n FastAPI (genererat fr친n Pydantic)"
  output: "TypeScript interfaces f칬r alla API responses och modeller"
  beroenden: "openapi-typescript f칬r generering"
  trigger: "make types-generate - genererar fr친n OpenAPI"
  format: "Automatiskt genererade types fr친n backend Pydantic-modeller"

streamlit:
  syfte: "Streamlit demo - pure presentation fr친n samma API som React-frontend"
  input: "HTTP requests till backend API endpoints"
  output: "Streamlit UI med tabeller och statistik fr친n API"
  beroenden: "requests f칬r API-anrop, pandas f칬r data-visning"
  trigger: "make streamlit - startar Streamlit p친 port 8501"
  format: "Pure presentation utan business logic - visar samma data som React"

Makefile:
  syfte: "Orchestrerar projektets kommandon f칬r setup, k칬rning, dokumentation och type-generering"
  input: "make-kommandon (help, api, ui, setup, test, docs, types, streamlit)"
  output: "Feedback med emojis och startar relevanta processer"
  trigger: "make help visar alla tillg칛ngliga kommandon"
  anrop: "make api startar backend, make ui startar frontend, make types genererar TypeScript, make streamlit startar demo"

setup.sh:
  syfte: "Automatiserar installation av dependencies och skapar frontend-struktur"
  input: "K칬rning i WSL-milj칬 fr친n projektets rot"
  output: "Installerad backend och frontend med alla dependencies"
  trigger: "bash setup.sh fr친n projektets rotmapp"
  test: "Kontrollerar att main.py finns och att npm/uv 칛r tillg칛ngliga" 